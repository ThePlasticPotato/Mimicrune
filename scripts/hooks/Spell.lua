---@class Spell
---@field psychic boolean
---@field musical boolean
---@field note_min number
---@field pcost number|nil
---@field pheat number|nil
---@field required boolean
---@field slot_weight number
local Spell, super = Utils.hookScript(Spell)

function Spell:init()
    super.init(self)

    self.musical = false
    self.note_min = 0

    self.psychic = false
    self.pcost = nil
    self.pheat = nil
    
    self.required = false
    self.slot_weight = 1
end

--- Returns the minimum notes required to cast a musical spell.
---@param chara PartyMember
---@return number notes
function Spell:getNoteMinimum(chara)
    return self.note_min
end

function Spell:isUsable(chara)
    if (self.psychic) then
        if (chara.neural_power < self:getNPCost(chara)) then return false end
    end
    if (self.musical) then
        if (chara.notes < self:getNoteMinimum(chara)) then return false end
    end
    return self.usable
end

--- Returns the weight of a spell for equipping. Default 1.
--- @param chara PartyMember
--- @return number weight
function Spell:getWeight(chara)
    return self.slot_weight
end

--- Returns the Neural Power cost of a spell to cast.
--- @param chara PartyMember
--- @return number cost
function Spell:getNPCost(chara)
    return self.pcost
end

--- Returns the Neural Heat generated bya a spell when cast.
--- @param chara PartyMember
--- @return number heat
function Spell:getNHeat(chara)
    return self.pheat
end

return Spell